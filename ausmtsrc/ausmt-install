#!/bin/sh

# 
# Some constants
# 

#include constants.sh

#
# Here starts the part where all the magic happens
#

#
# Helper functions that do all the needed heavy work
#

failure_unpatch() {
  ${PATCH_EXEC} -s -p1 -d / --dry-run < ${PATCH_DIR}/${PATCH_NAME} | tee -a $PATCH_LOG 1>&2
}

failure_notify() {
  ${NOTIFY_WRAPPER_EXEC} fin ${PATCH_DIR}
}

success_notify() {
  ${NOTIFY_WRAPPER_EXEC} in ${PATCH_DIR}
}

#include finished.sh

#include bck_file.sh

#include utils.sh

#include palm_md5sum.sh

verify_text_patch() {
  if [ -f ${PATCH_DIR}/${PATCH_NAME} ]; then
    echo >> ${AUSMT_LOG_FILE}
    echo "----------------------------------" >> ${AUSMT_LOG_FILE}
    echo "Checking patch files" >> ${AUSMT_LOG_FILE}
    echo "----------------------------------" >> ${AUSMT_LOG_FILE}
    echo >> ${AUSMT_LOG_FILE}

    FILE_LIST=" "`${LSDIFF_EXEC} --addprefix=/ --strip=1 ${PATCH_DIR}/${PATCH_NAME}`

    for file in ${FILE_LIST} ; do
      if [ -f ${file} ]; then
        find_palm_md5sum

        if [ -z "${palm_md5sum}" ]; then
          echo | tee -a ${AUSMT_LOG_FILE} 1>&2
          echo "ERROR: Failed to find md5sum for the file" | tee -a ${AUSMT_LOG_FILE} 1>&2
          echo "  file: ${file}" | tee -a ${AUSMT_LOG_FILE} 1>&2
          echo | tee -a ${AUSMT_LOG_FILE} 1>&2

          failure
        fi
      fi
    done

    echo >> ${AUSMT_LOG_FILE}
    echo "----------------------------------" >> ${AUSMT_LOG_FILE}
    echo "Dry running patch" >> ${AUSMT_LOG_FILE}
    echo "----------------------------------" >> ${AUSMT_LOG_FILE}
    echo >> ${AUSMT_LOG_FILE}

    ${PATCH_EXEC} -f -p 1 -d / --dry-run < ${PATCH_DIR}/${PATCH_NAME} 2>&1 >> ${AUSMT_LOG_FILE}

    if [ ${?} -ne 0 ]; then
      echo >> ${AUSMT_LOG_FILE}
      echo "----------------------------------" >> ${AUSMT_LOG_FILE}
      echo "Dry run failed, trying with -R" >> ${AUSMT_LOG_FILE}
      echo "----------------------------------" >> ${AUSMT_LOG_FILE}
      echo >> ${AUSMT_LOG_FILE}

      ${PATCH_EXEC} -f -R -p 1 -d / --dry-run < ${PATCH_DIR}/${PATCH_NAME} 2>&1 >> ${AUSMT_LOG_FILE}

      if [ ${?} -ne 0 ]; then
        failure
      else
        echo | tee -a ${AUSMT_LOG_FILE}
        echo "Interestingly, the patch seems to be already applied" | tee -a ${AUSMT_LOG_FILE}
        echo | tee -a ${AUSMT_LOG_FILE}

        patch_already_applied="yes"
      fi
    fi
  fi
}

install_text_patch() {
  if [ -f ${PATCH_DIR}/${PATCH_NAME} ]; then
    if [ "${patch_already_applied}" != "yes" ]; then
      echo | tee -a ${AUSMT_LOG_FILE}
      echo "----------------------------------" | tee -a ${AUSMT_LOG_FILE}
      echo "Applying text patch" | tee -a ${AUSMT_LOG_FILE}
      echo "----------------------------------" | tee -a ${AUSMT_LOG_FILE}
      echo | tee -a ${AUSMT_LOG_FILE}

      ${PATCH_EXEC} -f -p 1 -d / --no-backup-if-mismatch < ${PATCH_DIR}/${PATCH_NAME} 2>&1 | tee -a ${AUSMT_LOG_FILE}
    fi
  fi
}

check_ota_update() {
  echo >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo "Checking md5sums for ota" >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo >> ${AUSMT_LOG_FILE}

  for file in ${FILE_LIST} ; do
    get_bck_file

    get_palm_md5sum

    if [ -f ${bck_file} ]; then
      file_md5sum=`${MD5SUM_EXEC} ${file} | awk '{print $1}'`

      if [ "${file_md5sum}" = "${palm_md5sum}" ]; then
        echo "File matches current system md5sum, assuming OTA" >> ${AUSMT_LOG_FILE}
        echo "  file: ${file}" >> ${AUSMT_LOG_FILE}

        rm -f ${bck_file}
      fi
    fi
  done
}

create_backup_files() {
  echo >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo "Creating backup files" >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo >> ${AUSMT_LOG_FILE}

  for file in ${FILE_LIST} ; do
    get_bck_file

    get_palm_md5sum

    if [ ! -f ${bck_file} ]; then
      if [ ! -f ${file} ]; then
        echo "Created file, generating empty backup file" >>${AUSMT_LOG_FILE}
        echo "  file: ${file}" >> ${AUSMT_LOG_FILE}

        mkdir -p `dirname ${file}`

        touch ${bck_file}
      else
        echo "Modified file, backing up the original file" >> ${AUSMT_LOG_FILE}
        echo "  file: ${file}" >> ${AUSMT_LOG_FILE}

        cp ${file} ${bck_file}
      fi
    fi

    if [ ! -f ${file} ]; then
      file_md5sum=""
    else
      file_md5sum=`${MD5SUM_EXEC} $file | awk '{print $1}'`
    fi

    if [ ! -f ${bck_file} ]; then
      orig_md5sum=""
    else
      orig_md5sum=`${MD5SUM_EXEC} ${bck_file} | awk '{print $1}'`
    fi

    if [ ! -f ${file} ] && [ ! -s ${bck_file} ] || \
      [ "${file_md5sum}" = "${palm_md5sum}" ] || [ "${orig_md5sum}" = "${palm_md5sum}" ]
    then
      tmpvar=`echo "${file}" | tr '/' '.'`

      sed -i -e /"^${tmpvar} "/d ${AUSMT_CONTROL_DIR}/file_list
      echo "${file} ${VERSION}" >> ${AUSMT_CONTROL_DIR}/file_list
    fi

    if [ ! -z "${palm_md5sum}" ]; then
      tmpvar=`echo "${appid} ${file}" | tr '/' '.'`

      sed -i -e /"^${tmpvar} "/d ${AUSMT_CONTROL_DIR}/file_md5sums
      echo "${appid} ${file} ${palm_md5sum}" >> ${AUSMT_CONTROL_DIR}/file_md5sums
    fi

    if [ ! -z "${pkg_version}" ]; then
      tmpvar=`echo "${pkg_package} ${file}" | tr '/' '.'`

      sed -i -e /"^${tmpvar} "/d ${AUSMT_CONTROL_DIR}/file_control
      echo "${pkg_package} ${file} ${pkg_version}" >> ${AUSMT_CONTROL_DIR}/file_control
    fi
  done

  sed -i -e /"^`basename ${PATCH_DIR}` "/d ${AUSMT_PACKAGES_LIST_FILE}

  echo "`basename ${PATCH_DIR}` ${VERSION}" >> ${AUSMT_PACKAGES_LIST_FILE}
}

create_backup_patch() {
  echo >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo "Creating backup patch" >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo >> ${AUSMT_LOG_FILE}

  mkdir -p ${AUSMT_PATCH_BACKUP_ROOT_DIR} > /dev/null 2>&1
  cp -fr ${PATCH_DIR} ${AUSMT_PATCH_BACKUP_DIR} > /dev/null 2>&1
  echo "Created backup" >>${AUSMT_LOG_FILE}
  echo "  backup: ${AUSMT_PATCH_BACKUP_DIR}" >>${AUSMT_LOG_FILE}
}

#
# Bunch of safety checks and required initializations
#

mkdir -p ${AUSMT_VAR_DIR} > /dev/null 2>&1

if [ ! -f ${AUSMT_LOG_FILE} ]; then
  echo "*** Patch Log Created by Install $(date) ***" > ${AUSMT_LOG_FILE}
fi

# mount -o rw,remount / | tee -a ${AUSMT_LOG_FILE} 1>&2

echo >> ${AUSMT_LOG_FILE}
echo "------------------------------------------------------" >> ${AUSMT_LOG_FILE}
echo "AUSMT INSTALL $(date)" >> ${AUSMT_LOG_FILE}
echo "------------------------------------------------------" >> ${AUSMT_LOG_FILE}
echo >> ${AUSMT_LOG_FILE}

echo `basename ${PATCH_DIR}` >> ${AUSMT_LOG_FILE}

if [ -f ${PATCH_DIR}/${PATCH_NAME} ]; then
  echo "  contains text patch" >> ${AUSMT_LOG_FILE}
fi

echo >> ${AUSMT_LOG_FILE}

if [ ! -x ${PATCH_EXEC} ]; then
  echo "ERROR: Cannot find ${PATCH_EXEC}" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

if [ ! -x ${LSDIFF_EXEC} ]; then
  echo "ERROR: Cannot find ${LSDIFF_EXEC}" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

if [ -z ${PATCH_DIR} ]; then
  echo "ERROR: PATCH_DIR must be given for installing" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

if [ ! -d ${PATCH_DIR} ]; then
  echo "ERROR: ${PATCH_DIR} is not a directory or does not exist!" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

if [ ! -f ${PATCH_DIR}/${PATCH_NAME} ]; then
  echo "ERROR: Cannot find patch file !" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

#
# Intialize / update the aupt control system
#

mkdir -p ${AUSMT_CONTROL_DIR} >/dev/null 2>&1

if [ -f ${AUSMT_CONTROL_DIR}/backups ]; then
  echo "ERROR: Old backup system detected, not supported by AUSMT!" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

if [ -f ${AUSMT_CONTROL_DIR}/packages ]; then
  echo "ERROR: Old control system detected, not supported by AUSMT!" | tee -a ${AUSMT_LOG_FILE} 1>&2
  failure
fi

if [ ! -f ${AUSMT_CONTROL_DIR}/file_list ]; then
  touch ${AUSMT_CONTROL_DIR}/file_list || failure
fi

if [ ! -f ${AUSMT_CONTROL_DIR}/file_control ]; then
  touch ${AUSMT_CONTROL_DIR}/file_control || failure
fi
 
if [ ! -f ${AUSMT_CONTROL_DIR}/file_md5sums ]; then
  touch ${AUSMT_CONTROL_DIR}/file_md5sums || failure
fi

if [ ! -f ${AUSMT_PACKAGES_LIST_FILE} ]; then
  touch ${AUSMT_PACKAGES_LIST_FILE} || failure
fi

rm -f $AUSMT_CACHE_FILE >/dev/null 2>&1

#
# The main function that controls all the magic stuff
#

verify_text_patch

check_ota_update

create_backup_files

install_text_patch

create_backup_patch

success

exit 0
