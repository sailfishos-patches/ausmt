#!/bin/sh

#
# Some constants
#


# Paths / Files
AUSMT_VAR_DIR=/var/lib/patchmanager/ausmt
AUSMT_CONTROL_DIR=${AUSMT_VAR_DIR}/control
PATCH_ROOT_DIR=/usr/share/patchmanager/patches
PATCH_DIR=${PATCH_ROOT_DIR}/${1}
AUSMT_FAILED_FILE=${AUSMT_VAR_DIR}/webosinternals.failed
AUSMT_MD5SUMS_FILE=${AUSMT_VAR_DIR}/webosinternals.md5sums
AUSMT_PATCHMANAGER_LOG_FILE=${AUSMT_VAR_DIR}/patchmanager.log

AUSMT_LOG_FILE=${AUSMT_VAR_DIR}/ausmt.log
AUSMT_PACKAGES_LIST_FILE=${AUSMT_VAR_DIR}/packages
AUSMT_CACHE_FILE=${AUSMT_VAR_DIR}/packages.cache

LIPSTICK_FILE=/usr/bin/lipstick
PANDORA_MD5SUMS_FILE=/opt/lipstick-pandora/md5sums

# Constants
PATCH_NAME=unified_diff.patch
VERSION=ausmt-sailfishos-1
VERSIONS=ausmt-sailfishos-1

# Applications
MD5SUM_EXEC=/usr/bin/sha256sum
RPM_EXEC=/bin/rpm
PATCH_EXEC=/usr/bin/patch
LSDIFF_EXEC=/usr/bin/lsdiff

#
# Here starts the part where all the magic happens
#

#
# Helper functions that do all the needed heavy work
#

do_verify_failure() {
  echo | tee -a ${AUSMT_LOG_FILE}
  echo "*** FAILED ***" | tee -a ${AUSMT_LOG_FILE}
  echo | tee -a ${AUSMT_LOG_FILE}

  rm -f ${AUSMT_FAILED_FILE}
  rm -f ${AUSMT_MD5SUMS_FILE}

  exit 1
}

do_verify_success() {
  echo | tee -a ${AUSMT_LOG_FILE}
  echo "*** SUCCESS ***" | tee -a ${AUSMT_LOG_FILE}
  echo | tee -a ${AUSMT_LOG_FILE}

  rm -f ${AUSMT_FAILED_FILE}
  rm -f ${AUSMT_MD5SUMS_FILE}

  exit 0
}

#
# Bunch of safety checks and required initializations
#

rm -f ${AUSMT_PATCHMANAGER_LOG_FILE}

if [ ! -e ${AUSMT_LOG_FILE} ]; then
  echo "******* Patch Log Created by Verify $(date) ************" > ${AUSMT_LOG_FILE}
fi

echo >> ${AUSMT_LOG_FILE}
echo "------------------------------------------------------" >> ${AUSMT_LOG_FILE}
echo "AUSMT System Verification $(date)" >> ${AUSMT_LOG_FILE}
echo "------------------------------------------------------" >> ${AUSMT_LOG_FILE}
echo >> ${AUSMT_LOG_FILE}

#
# The main function that controls all the magic stuff
#

if [ -f "${AUSMT_PACKAGES_LIST_FILE}" ]; then
  echo >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo "Checking package versions" >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo >> ${AUSMT_LOG_FILE}

  echo "Checking package versions..." | tee -a ${AUSMT_LOG_FILE}

  while read i ; do
    package=`echo ${i} |awk '{print $1}'`
    version=`echo ${i} |awk '{print $2}'`

    if [ -z "${version}" ]; then
      version=${VERSION}
    fi

    version_ok="no"

    for v in ${VERSIONS} ; do
      if [ "${version}" = "${v}" ]; then
        version_ok="yes"
      fi
    done

    if [ "${version_ok}" = "no" ]; then
      OLD_PACKAGES="${OLD_PACKAGES} ${package}"

      echo "Found package with unsupported version" | tee -a ${AUSMT_LOG_FILE} 1>&2
      echo "  package: ${package}" | tee -a ${AUSMT_LOG_FILE} 1>&2
      echo "  version: ${version}" | tee -a ${AUSMT_LOG_FILE} 1>&2
    fi
  done < ${AUSMT_PACKAGES_LIST_FILE}

  if [ ! -z "${OLD_PACKAGES}" ]; then
    echo >> ${AUSMT_LOG_FILE}
    echo "ERROR: Unsupported package versions detected" | tee -a ${AUSMT_LOG_FILE} 1>&2
    echo >> ${AUSMT_LOG_FILE}

    do_verify_failure
  fi
fi

if [ -e ${MD5SUM_EXEC} ]; then
  echo >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo "Verifying system files" >> ${AUSMT_LOG_FILE}
  echo "----------------------------------" >> ${AUSMT_LOG_FILE}
  echo >> ${AUSMT_LOG_FILE}

  echo "Verifying system files..." | tee -a ${AUSMT_LOG_FILE}

  rm -f ${AUSMT_FAILED_FILE}
  rm -f ${AUSMT_MD5SUMS_FILE}

  rpm -qa --queryformat '[%{FILEMD5S}  %{FILENAMES}\n]' | sed -e '/^  .*$/d' > ${AUSMT_MD5SUMS_FILE}
  cat ${PANDORA_MD5SUMS_FILE} >> ${AUSMT_MD5SUMS_FILE}

  sed -i \
      -e '/[0-9a-f]*  \/lib\/modules\/.*/d' \
      -e '/[0-9a-f]*  \/system\/.*/d' \
      -e '/[0-9a-f]*  \/data\/.*/d' \
      -e '/[0-9a-f]*  \/etc\/.*/d' \
      -e '/[0-9a-f]*  \/var\/.*/d' \
      -e '/[0-9a-f]*  \/usr\/share\/lipstick\/devicelock\/\..*/d' \
      -e '/[0-9a-f]*  \/usr\/lib\/locale\/.*/d' \
      -e '/[0-9a-f]*  \/usr\/share\/info\/dir/d' \
      ${AUSMT_MD5SUMS_FILE}

  cd / && ${MD5SUM_EXEC} -c ${AUSMT_MD5SUMS_FILE} 2>/dev/null | \
    grep -v OK > ${AUSMT_FAILED_FILE}

  while read i ; do
    backup_file=""
    backup_version=""

    file=`echo ${i} |awk -F: '{print $1}'`

    if [ -e ${AUSMT_CONTROL_DIR}/file_list ]; then
      backup_file=`grep -h ${file} ${AUSMT_CONTROL_DIR}/file_list`
      backup_version=`echo ${backup_file} | awk '{print $2}'`
    fi

    if [ -z "${backup_version}" ]; then
      backup_version="aupt-1"
    fi

    backup_good="no"

    for v in ${VERSIONS} ; do
      if [ "${backup_version}" = "${v}" ]; then
        backup_good="yes"
      fi
    done

    if [ -z "${backup_file}" ]; then
      NO_BACKUP_FILES="${NO_BACKUP_FILES} ${file}"

      echo "File modified with unsupported methods" | tee -a ${AUSMT_LOG_FILE} 1>&2
      echo "  file: ${file}" | tee -a ${AUSMT_LOG_FILE} 1>&2
      echo "${file} nobackup" >> ${AUSMT_PATCHMANAGER_LOG_FILE}
    elif [ "${backup_good}" = "no" ]; then
      OLD_BACKUP_FILES="${OLD_BACKUP_FILES} ${file}"

      echo "Found backup file with unsupported version" | tee -a ${AUSMT_LOG_FILE} 1>&2
      echo "  file: ${file}" | tee -a ${AUSMT_LOG_FILE} 1>&2
      echo "${file} unsupported" >> ${AUSMT_PATCHMANAGER_LOG_FILE}
    else
      echo "${file} ok" >> ${AUSMT_PATCHMANAGER_LOG_FILE}
    fi
  done < ${AUSMT_FAILED_FILE}

  if [ ! -z "${NO_BACKUP_FILES}" ]; then
    echo >> ${AUSMT_LOG_FILE}
    echo "ERROR: Unsupported file modifications detected" | tee -a ${AUSMT_LOG_FILE} 1>&2
    echo >> ${AUSMT_LOG_FILE}
  fi

  if [ ! -z "${OLD_BACKUP_FILES}" ]; then
    echo >> ${AUSMT_LOG_FILE}
    echo "ERROR: Unsupported backup file versions detected" | tee -a ${AUSMT_LOG_FILE} 1>&2
    echo >> ${AUSMT_LOG_FILE}
  fi

  if [ ! -z "${NO_BACKUP_FILES}" ] || [ ! -z "${OLD_BACKUP_FILES}" ]; then
    do_verify_failure
  fi
fi

do_verify_success

exit 0
